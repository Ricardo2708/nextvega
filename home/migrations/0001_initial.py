# Generated by Django 4.2.3 on 2024-02-27 00:54

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EntryBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_noticia', models.CharField(default='', max_length=60, verbose_name='Nombre:')),
                ('preview_noticia', models.TextField(default='', max_length=250, verbose_name='Subnombre:')),
                ('autor_noticia', models.CharField(default='', max_length=60, verbose_name='Autor:')),
                ('slug_noticia', models.CharField(default='', editable=False, max_length=60, verbose_name='Url Amigable')),
                ('image_noticia', models.ImageField(blank=True, null=True, upload_to='news_images/')),
                ('text', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado El :')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado El :')),
            ],
            options={
                'verbose_name': 'Entry',
                'verbose_name_plural': "Entry's",
            },
        ),
        migrations.CreateModel(
            name='ComentariosBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autor_comentario', models.CharField(max_length=100)),
                ('contenido_comentario', models.TextField(verbose_name='Contenido:')),
                ('primario', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado El :')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado El :')),
                ('comentario_padre', models.ForeignKey(blank=True, limit_choices_to={'primario': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='respuestas', to='home.comentariosblog', verbose_name='Comentario Relacion:')),
                ('noticia_comentario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entryblog', to='home.entryblog')),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('token', models.CharField(max_length=60, unique=True, verbose_name='Token:')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
